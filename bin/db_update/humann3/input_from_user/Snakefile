# copying from user-specified locations instead of just what would be created by the genes-db-update pipeline

rule humann3_copy_gene_input:
    """
    Splitting gene fasta for distributed searching
    """
    input:
        fna = config['genes_db']['genes']['nucleotide'],
        faa = config['genes_db']['genes']['amino_acid'],
        txt = config['genes_db']['genes']['metadata'],
    output:
        fna = temp(config['tmp_dir'] + config['db_name'] + 'humann3/genome_reps_filtered.fna'),
        faa = temp(config['tmp_dir'] + config['db_name'] + 'humann3/genome_reps_filtered.faa'),
        txt = temp(config['tmp_dir'] + config['db_name'] + 'humann3/genome_reps_filtered.txt')
    params:
        ionice = config['params']['ionice'],
        exe = config['pipeline']['script_folder'] + 'cat_files.py'
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59
    log:
        log_dir + 'humann3_copy_gene_input/{}.log'.format(config['db_name'].rstrip('/'))
    shell:
        """
        ionice {params.ionice} {params.exe} {input.fna} > {output.fna} 2>  {log}
        ionice {params.ionice} {params.exe} {input.faa} > {output.faa} 2>> {log}
        ionice {params.ionice} {params.exe} {input.txt} > {output.txt} 2>> {log}
        """

rule humann3_copy_cluster_input:
    """
    Splitting gene fasta for distributed searching
    """
    input:
        hit_c = config['humann_db']['query']['hits'],
        faa_c = config['humann_db']['cluster']['reps'],
        mem_c = config['humann_db']['cluster']['membership']
    output:
        hit_c = temp(config['tmp_dir'] + config['db_name'] + 'humann3/query_hits.txt'),
        faa_c = temp(config['tmp_dir'] + config['db_name'] + 'humann3/clusters_reps.faa'),
        mem_c = temp(config['tmp_dir'] + config['db_name'] + 'humann3/clusters_membership.tsv')
    params:
        ionice = config['params']['ionice'],
        exe = config['pipeline']['script_folder'] + 'cat_files.py'
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59
    log:
        log_dir + 'humann3_copy_cluster_input/{}.log'.format(config['db_name'].rstrip('/'))
    shell:
        """
        ionice {params.ionice} {params.exe} {input.hit_c} > {output.hit_c} 2>  {log} 
        ionice {params.ionice} {params.exe} {input.mem_c} > {output.mem_c} 2>> {log} 
        ionice {params.ionice} {params.exe} {input.faa_c} > {output.faa_c} 2>> {log} 
        """
        
