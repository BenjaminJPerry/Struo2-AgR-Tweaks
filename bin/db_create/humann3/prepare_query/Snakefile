#-- preparing input for annotation & humann database construction --#

rule humann3_copy_input:
    """
    Copying input to temp directory
    """
    input:
        faa_c = genes_dir + 'cluster/clusters_reps.faa.gz',
        mem_c = genes_dir + 'cluster/clusters_membership.tsv.gz',
        fna = genes_dir + 'genome_reps_filtered.fna.gz',
        faa = genes_dir + 'genome_reps_filtered.faa.gz',
        txt = genes_dir + 'genome_reps_filtered.txt.gz'
    output:
        faa_c = temp(config['tmp_dir'] + 'humann3/clusters_reps.faa.gz'),
        mem_c = temp(config['tmp_dir'] + 'humann3/clusters_membership.tsv.gz'),
        fna = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.fna.gz'),
        faa = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.faa.gz'),
        txt = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.txt.gz')
    params:
        ionice = config['params']['ionice']
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59
    log:
        log_dir + 'humann3_copy_input/all.log'
    shell:
        """
        ionice {params.ionice} cp -f {input.faa_c} {output.faa_c} 2> {log} 1>&2
        ionice {params.ionice} cp -f {input.mem_c} {output.mem_c} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.faa} {output.faa} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.fna} {output.fna} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.txt} {output.txt} 2>> {log} 1>&2
        """

rule humann3_batch_seqs:
    """
    Splitting gene fasta for distributed searching (annotation)
    """
    input:
        faa = genes_dir + 'cluster/clusters_reps.faa.gz'
    output:
        faa = temp(config['tmp_dir'] + 'fasta_split/clusters_reps.faa'),
        splt = temp(expand(config['tmp_dir'] + \
                           'humann3_search/clusters_reps.part-{splitID}.faa',
	                   splitID=config['params']['humann3']['splits']))
    params:
        ionice = config['params']['ionice'],         
        n_splits = config['params']['humann3']['batches'],
	out_dir = config['tmp_dir'] + 'humann3_search'
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59,
        mem_gb_pt = lambda wildcards, attempt: attempt * 10
    conda:
        '../../../envs/genes.yaml'
    log:
        log_dir + 'humann3_batch_seqs/all.log'
    benchmark:
        benchmark_dir + 'humann3_batch_seqs/all.txt'
    shell:
        """
        echo "# Uncompressing fasta..." > {log}
        mkdir -p `dirname {output.faa}` 2>> {log}
        ionice {params.ionice} gunzip -c {input.faa} > {output.faa} 2>> {log}

        echo "# Splitting fasta..." >> {log}
        mkdir -p {params.out_dir} 2>> {log}
        fasta-splitter \
          --n-parts {params.n_splits} \
          --out-dir {params.out_dir} \
          {output.faa} 2>> {log} 1>&2
        """

