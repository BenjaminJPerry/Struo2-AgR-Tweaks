#-- preparing input for annotation & humann database construction --#

rule humann3_copy_input:
    """
    Copying input to temp directory
    """
    input:
        faa_c = genes_dir + 'cluster/clusters_reps.faa.gz',
        mem_c = genes_dir + 'cluster/clusters_membership.tsv.gz',
        fna = genes_dir + 'genome_reps_filtered.fna.gz',
        faa = genes_dir + 'genome_reps_filtered.faa.gz',
        txt = genes_dir + 'genome_reps_filtered.txt.gz'
    output:
        faa_c = temp(config['tmp_dir'] + 'humann3/clusters_reps.faa.gz'),
        mem_c = temp(config['tmp_dir'] + 'humann3/clusters_membership.tsv.gz'),
        fna = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.fna.gz'),
        faa = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.faa.gz'),
        txt = temp(config['tmp_dir'] + 'humann3/genome_reps_filtered.txt.gz')
    params:
        ionice = config['params']['ionice']
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59
    log:
        log_dir + 'humann3_copy_input/all.log'
    shell:
        """
        ionice {params.ionice} cp -f {input.faa_c} {output.faa_c} 2> {log} 1>&2
        ionice {params.ionice} cp -f {input.mem_c} {output.mem_c} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.faa} {output.faa} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.fna} {output.fna} 2>> {log} 1>&2
        ionice {params.ionice} cp -f {input.txt} {output.txt} 2>> {log} 1>&2
        """

rule humann3_batch_seqs:
    """
    Splitting gene fasta for distributed searching (annotation)
    """
    input:
        faa = config['tmp_dir'] + 'humann3/clusters_reps.faa.gz'
    output:
        done = config['tmp_dir'] + 'humann3_search/split.done',
        splt = temp(expand(config['tmp_dir'] + \
                           'humann3_search/stdin.part_{splitID}.fasta',
	                   splitID=config['params']['humann3']['splits']))
    params:
        n_splits = config['params']['humann3']['batches'],
    resources:
        time = lambda wildcards, attempt: attempt ** 3 * 59,
        mem_gb_pt = lambda wildcards, attempt: attempt ** 2 * 10
    conda:
        '../../../envs/genes.yaml'
    log:
        log_dir + 'humann3_batch_seqs/all.log'
    benchmark:
        benchmark_dir + 'humann3_batch_seqs/all.txt'
    shell:
        """
        OUTDIR=`dirname {output.done} 2> {log}`
        seqkit shuffle -j 1 --two-pass {input.faa} 2>> {log} | \
          perl -pe 's/^\n//' 2>> {log} | \
          seqkit split -j 1 --by-part {params.n_splits} --out-dir $OUTDIR 2>> {log} 1>&2
        touch {output.done}
        """

